generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String    @unique
  phone_number  String
  password      String
  date_born     DateTime?
  last_session  DateTime?
  update_at     DateTime  @updatedAt 
  created_at    DateTime  @default(now())
  role          Role      @default(USER)

  @@map("users")
}

model Movie {
  id                 Int       @id @default(autoincrement())
  title              String
  categoryId         Int      @default(2)
  category           Category  @relation(fields: [categoryId], references: [id])
  video_url          String
  thumbnail_url      String
  description        String
  show               String?   @default("")
  products_reviewed  String?   @default("")
  key_highlights     String?   @default("")
  rating             String?   @default("")
  additional_context String?   @default("")
  duration           String    @default("")
  release_year       Int       @default(0)
  cast               String    @default("")
  director           String    @default("")
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  movie_hosts        MovieHost[]

  @@map("movies")
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  movies      Movie[]

  @@map("categories")
}

model Host {
  id            Int         @id @default(autoincrement())
  name          String
  bio           String?     @default("")
  profile_image String?     @default("")
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  movie_hosts   MovieHost[]

  @@map("hosts")
}

model MovieHost {
  movieId     Int
  hostId      Int
  movie       Movie     @relation(fields: [movieId], references: [id], onDelete: Cascade)
  host        Host      @relation(fields: [hostId], references: [id], onDelete: Cascade)
  created_at  DateTime  @default(now())

  @@id([movieId, hostId])
  @@map("movie_hosts")
}

enum Role {
  USER 
  ADMIN
}

enum Status {
  conserved
  deteriorated
}